fn foo (x int) => x * 2
fn foo (x:xs int*) => foo(x) + foo(xs)

fn fib (int) => fib(_ - 1) + fib(_ - 2)
fn fib ( 1 ) => 1
fn fib ( 0 ) => 1

fn main => {
    let fib_ten int = fib(10)
    // Generator
    let digits_under_ten_generator int* = 1..=fib_ten
    let digits_under_ten_array int[] = (1..=fib_ten):collect

    let sum_generator = foo(digits_under_ten_generator)
    let sum_array = foo(digits_under_ten_array)

    :assert_eq(sum_generator, sum_array)
    println("OK! {sum_generator}")
}